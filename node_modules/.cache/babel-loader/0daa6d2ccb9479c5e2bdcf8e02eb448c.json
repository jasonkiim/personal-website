{"ast":null,"code":"var _jsxFileName = \"/Users/jasonkim/personal-website/src/ProjectsPaper.js\";\n\nconst React = require('react');\n\nconst createReactClass = require('create-react-class');\n\nconst PropTypes = require('prop-types');\n\nconst ProjectsPaper = createReactClass({\n  displayName: 'ProjectsPaper',\n  propTypes: {\n    dialogTitle: PropTypes.string.isRequired,\n    technologies: PropTypes.string.isRequired,\n    projectLink: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRquired,\n    description: PropTypes.string.isRequired\n  },\n\n  getInitialState() {\n    return {\n      open: false\n    };\n  },\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  },\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  },\n\n  render() {\n    const _this$props = this.props,\n          dialogTitle = _this$props.dialogTitle,\n          technologies = _this$props.technologies,\n          projectLink = _this$props.projectLink,\n          title = _this$props.title,\n          image = _this$props.image,\n          description = _this$props.description;\n    const open = this.state.open;\n    const customDialogStyle = {\n      width: '100%',\n      maxWidth: '700px',\n      padding: '40px'\n    };\n    const imageVal = image[Object.keys(image)[0]];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: imageVal,\n      alt: \"Asdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        paddingTop: '25%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, title)), React.createElement(\"p\", {\n      className: \"project-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontWeight: '800'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, technologies), projectLink && React.createElement(\"span\", {\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"asdf\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), description)));\n  }\n\n});\nmodule.exports = ProjectsPaper;","map":{"version":3,"sources":["/Users/jasonkim/personal-website/src/ProjectsPaper.js"],"names":["React","require","createReactClass","PropTypes","ProjectsPaper","displayName","propTypes","dialogTitle","string","isRequired","technologies","projectLink","title","image","isRquired","description","getInitialState","open","handleOpen","setState","handleClose","render","props","state","customDialogStyle","width","maxWidth","padding","imageVal","Object","keys","paddingTop","fontWeight","float","module","exports"],"mappings":"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","sourcesContent":["const React = require('react');\nconst createReactClass = require('create-react-class');\nconst PropTypes = require('prop-types');\n\nconst ProjectsPaper = createReactClass({\n  displayName: 'ProjectsPaper',\n  propTypes: {\n    dialogTitle: PropTypes.string.isRequired,\n    technologies: PropTypes.string.isRequired,\n    projectLink: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRquired,\n    description: PropTypes.string.isRequired\n  },\n  getInitialState() {\n    return {\n      open: false\n    };\n  },\n  handleOpen() {\n    this.setState({ open: true });\n  },\n  handleClose() {\n    this.setState({ open: false });\n  },\n  render() {\n    const {\n      dialogTitle,\n      technologies,\n      projectLink,\n      title,\n      image,\n      description\n    } = this.props;\n    const { open } = this.state;\n\n    const customDialogStyle = {\n      width: '100%',\n      maxWidth: '700px',\n      padding: '40px'\n    };\n\n    const imageVal = image[Object.keys(image)[0]];\n\n    return (\n      <React.Fragment>\n        <div className=\"bg\">\n          <img src={imageVal} alt=\"Asdf\" />\n          <div className=\"overlay\">\n            <h2 style={{ paddingTop: '25%' }}>{title}</h2>\n          </div>\n          <p className=\"project-description\">\n            <span style={{ fontWeight: '800' }}>{technologies}</span>\n            {projectLink && <span style={{ float: 'right' }}>asdf</span>}\n            <br />\n            <br />\n            {description}\n          </p>\n        </div>\n      </React.Fragment>\n    );\n  }\n});\n\nmodule.exports = ProjectsPaper;\n"]},"metadata":{},"sourceType":"module"}